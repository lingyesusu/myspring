<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/index" />
		<property name="unauthorizedUrl" value="/login/unauthorized" />
		<property name="filters">
            <map>
            	<entry key="login" value-ref="login"/>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="kickout" value-ref="kickoutSessionFilter"/>
            </map>
        </property>
		<property name="filterChainDefinitions">
		<value>
				/login = anon
				/inLogin = anon
				/logout = anon
				/role/** = roles[admin]
				/permission/** = perms[permssion:look]
                /resources/** =anon
				/** = authc,kickout
			</value>
		</property>
	</bean>
	
	<bean id="userRealm" class="com.shiro.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
		<property name="cachingEnabled" value="true"/>
		<property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
	</bean>
    
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 基于数据库登录校验的实现 -->
		<property name="realm" ref="userRealm" />
        <!-- 缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"/>
		<!-- session 管理器 -->
        <property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>
    
	<!-- 用户缓存 -->
	<bean id="cacheManager" class="com.shiro.cache.impl.CustomShiroCacheManager">
	    <property name="shiroCacheManager" ref="shiroCacheManager"/>
	</bean>
	
    <!-- session管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000" /><!-- 超时时间 -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionValidationSchedulerEnabled" value="true" /><!-- 定时检查失效的session -->
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionListeners">
	       <list>
	           <ref bean="customSessionListener"/>
	       </list>
	   </property>
        <property name="sessionDAO" ref="sessionDAO" /><!-- session存储的实现 -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/><!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>
    
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    
	<!-- shiro 缓存实现，对ShiroCacheManager，我是采用redis的实现 -->
	<bean id="shiroCacheManager" class="com.shiro.cache.redis.impl.JedisShiroCacheManager">
	    <property name="jedisManager" ref="jedisManager"/>
	</bean>
	
    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
	
	<!-- 自定义Session存储容器-->
    <bean id="sessionDAO" class="com.shiro.session.impl.CustomShiroSessionDAO">
	    <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
 		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
  	</bean>
  	
  	<!-- cookie-->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="sid" /><!-- cookie的name,对应的默认是 JSESSIONID -->
        <property name="domain" value=""/>
        <property name="path" value="/"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>
    
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="domain" value=""/>
        <property name="path" value="/"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>
    
  	<!-- session 创建、删除、查询 -->
	<bean id="jedisShiroSessionRepository" class="com.shiro.session.impl.JedisShiroSessionRepository" >
		 <property name="jedisManager" ref="jedisManager"/>
	</bean>
	
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    
  	<!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.shiro.RetryLimitHashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
  	
  	<!-- 手动操作Session，管理Session -->
	<bean id="customSessionManager" class="com.shiro.custo.CustomSessionManager">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
		 <property name="customShiroSessionDAO" ref="sessionDAO"/>
	</bean>
    
    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/login"/>
    </bean>
    
    <!-- session 校验单个用户是否多次登录 -->
	<bean id="kickoutSessionFilter"   class="com.shiro.filter.KickoutSessionControlFilter">  
	    <property name="kickoutUrl" value="/logout?kickout"/>
	</bean>
	
	<!-- 静态注入 jedisShiroSessionRepository-->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="com.shiro.filter.KickoutSessionControlFilter.setShiroSessionRepository"/>
	    <property name="arguments" ref="jedisShiroSessionRepository"/>
	</bean>
	
	<bean id="login" class="com.shiro.filter.LoginFilter"/>
	
    <!-- custom shiro session listener -->
	<bean id="customSessionListener" class="com.shiro.listenter.CustomSessionListener">
	    <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- 静态注入，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
	    <property name="arguments" ref="securityManager"/>
	</bean>
	
</beans>